// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: athena.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobType int32

const (
	// Ping - only latency is measured.
	JobType_ICMP JobType = 0
	JobType_TCP  JobType = 1
	// HTTP - latency and HTTP response body are measured.
	JobType_HTTP  JobType = 11
	JobType_HTTPS JobType = 12
	// DNS - latency and DNS Answer are measured.
	JobType_DNS_A     JobType = 21
	JobType_DNS_AAAA  JobType = 22
	JobType_DNS_CNAME JobType = 23
	JobType_DNS_MX    JobType = 24
)

// Enum value maps for JobType.
var (
	JobType_name = map[int32]string{
		0:  "ICMP",
		1:  "TCP",
		11: "HTTP",
		12: "HTTPS",
		21: "DNS_A",
		22: "DNS_AAAA",
		23: "DNS_CNAME",
		24: "DNS_MX",
	}
	JobType_value = map[string]int32{
		"ICMP":      0,
		"TCP":       1,
		"HTTP":      11,
		"HTTPS":     12,
		"DNS_A":     21,
		"DNS_AAAA":  22,
		"DNS_CNAME": 23,
		"DNS_MX":    24,
	}
)

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_athena_proto_enumTypes[0].Descriptor()
}

func (JobType) Type() protoreflect.EnumType {
	return &file_athena_proto_enumTypes[0]
}

func (x JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobType.Descriptor instead.
func (JobType) EnumDescriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{0}
}

// Host represents a test target in the network.
type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"` // A host name or IP address
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                        // Used only for none ICMP JobType
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{0}
}

func (x *Host) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *Host) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Job defines a set of targets to test connectivity/integrity using same method (ICMP, TCP, etc.) by a certain deadline.
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Job Identifier
	Uuid string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type JobType `protobuf:"varint,2,opt,name=type,proto3,enum=athena.JobType" json:"type,omitempty"`
	// Job Specs
	Targets  []*Host                `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	Deadline *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Job) GetType() JobType {
	if x != nil {
		return x.Type
	}
	return JobType_ICMP
}

func (x *Job) GetTargets() []*Host {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *Job) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type JobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Job Identifier
	Uuid string  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type JobType `protobuf:"varint,2,opt,name=type,proto3,enum=athena.JobType" json:"type,omitempty"`
	// Job Specs
	Target    *Host                  `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Test Response
	Success      bool    `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	LatencyMs    uint32  `protobuf:"varint,6,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	HttpResponse *string `protobuf:"bytes,10,opt,name=http_response,json=httpResponse,proto3,oneof" json:"http_response,omitempty"`
	DnsAnswer    *string `protobuf:"bytes,20,opt,name=dns_answer,json=dnsAnswer,proto3,oneof" json:"dns_answer,omitempty"`
}

func (x *JobResponse) Reset() {
	*x = JobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResponse) ProtoMessage() {}

func (x *JobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResponse.ProtoReflect.Descriptor instead.
func (*JobResponse) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{2}
}

func (x *JobResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *JobResponse) GetType() JobType {
	if x != nil {
		return x.Type
	}
	return JobType_ICMP
}

func (x *JobResponse) GetTarget() *Host {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *JobResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *JobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JobResponse) GetLatencyMs() uint32 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *JobResponse) GetHttpResponse() string {
	if x != nil && x.HttpResponse != nil {
		return *x.HttpResponse
	}
	return ""
}

func (x *JobResponse) GetDnsAnswer() string {
	if x != nil && x.DnsAnswer != nil {
		return *x.DnsAnswer
	}
	return ""
}

var File_athena_proto protoreflect.FileDescriptor

var file_athena_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0x9e, 0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x74, 0x68,
	0x65, 0x6e, 0x61, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x22, 0xce, 0x02, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x4a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x74, 0x68,
	0x65, 0x6e, 0x61, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x4d, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x2a, 0x65, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x49, 0x43, 0x4d, 0x50, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54,
	0x54, 0x50, 0x53, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x4e, 0x53, 0x5f, 0x41, 0x10, 0x15,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4e, 0x53, 0x5f, 0x41, 0x41, 0x41, 0x41, 0x10, 0x16, 0x12, 0x0d,
	0x0a, 0x09, 0x44, 0x4e, 0x53, 0x5f, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x17, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x4e, 0x53, 0x5f, 0x4d, 0x58, 0x10, 0x18, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_athena_proto_rawDescOnce sync.Once
	file_athena_proto_rawDescData = file_athena_proto_rawDesc
)

func file_athena_proto_rawDescGZIP() []byte {
	file_athena_proto_rawDescOnce.Do(func() {
		file_athena_proto_rawDescData = protoimpl.X.CompressGZIP(file_athena_proto_rawDescData)
	})
	return file_athena_proto_rawDescData
}

var file_athena_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_athena_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_athena_proto_goTypes = []interface{}{
	(JobType)(0),                  // 0: athena.JobType
	(*Host)(nil),                  // 1: athena.Host
	(*Job)(nil),                   // 2: athena.Job
	(*JobResponse)(nil),           // 3: athena.JobResponse
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_athena_proto_depIdxs = []int32{
	0, // 0: athena.Job.type:type_name -> athena.JobType
	1, // 1: athena.Job.targets:type_name -> athena.Host
	4, // 2: athena.Job.deadline:type_name -> google.protobuf.Timestamp
	0, // 3: athena.JobResponse.type:type_name -> athena.JobType
	1, // 4: athena.JobResponse.target:type_name -> athena.Host
	4, // 5: athena.JobResponse.timestamp:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_athena_proto_init() }
func file_athena_proto_init() {
	if File_athena_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_athena_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_athena_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_athena_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_athena_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_athena_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_athena_proto_goTypes,
		DependencyIndexes: file_athena_proto_depIdxs,
		EnumInfos:         file_athena_proto_enumTypes,
		MessageInfos:      file_athena_proto_msgTypes,
	}.Build()
	File_athena_proto = out.File
	file_athena_proto_rawDesc = nil
	file_athena_proto_goTypes = nil
	file_athena_proto_depIdxs = nil
}
