// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: athena.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HostType int32

const (
	// Ping - only latency is measured.
	HostType_ICMP HostType = 0
	HostType_TCP  HostType = 1
	// HTTP - latency and HTTP response body are measured.
	HostType_HTTP  HostType = 11
	HostType_HTTPS HostType = 12
	// DNS - latency and DNS Answer are measured.
	HostType_DNS_A     HostType = 21
	HostType_DNS_AAAA  HostType = 22
	HostType_DNS_CNAME HostType = 23
	HostType_DNS_MX    HostType = 24
)

// Enum value maps for HostType.
var (
	HostType_name = map[int32]string{
		0:  "ICMP",
		1:  "TCP",
		11: "HTTP",
		12: "HTTPS",
		21: "DNS_A",
		22: "DNS_AAAA",
		23: "DNS_CNAME",
		24: "DNS_MX",
	}
	HostType_value = map[string]int32{
		"ICMP":      0,
		"TCP":       1,
		"HTTP":      11,
		"HTTPS":     12,
		"DNS_A":     21,
		"DNS_AAAA":  22,
		"DNS_CNAME": 23,
		"DNS_MX":    24,
	}
)

func (x HostType) Enum() *HostType {
	p := new(HostType)
	*p = x
	return p
}

func (x HostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostType) Descriptor() protoreflect.EnumDescriptor {
	return file_athena_proto_enumTypes[0].Descriptor()
}

func (HostType) Type() protoreflect.EnumType {
	return &file_athena_proto_enumTypes[0]
}

func (x HostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HostType.Descriptor instead.
func (HostType) EnumDescriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{0}
}

type NodeType int32

const (
	NodeType_Probe     NodeType = 0  // Probe is a minimal worker. It works only after connecting to a Pool.
	NodeType_Worker    NodeType = 1  // Worker accepts Job from a Server (possibly thru one or more Relay) and sends the result back to the Server (possibly thru one or more Relay).
	NodeType_Relay     NodeType = 10 // Relay acts as a proxy between a Probe/Worker and a Server, Pool, or next Relay.
	NodeType_Pool      NodeType = 11 // Pool accepts Job from a Server and broadcast it to all connected Probe/Worker.
	NodeType_DevServer NodeType = 20 // DevServer is used for debugging only.
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0:  "Probe",
		1:  "Worker",
		10: "Relay",
		11: "Pool",
		20: "DevServer",
	}
	NodeType_value = map[string]int32{
		"Probe":     0,
		"Worker":    1,
		"Relay":     10,
		"Pool":      11,
		"DevServer": 20,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_athena_proto_enumTypes[1].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_athena_proto_enumTypes[1]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{1}
}

// Host represents a test target in the network.
type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName string   `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"` // A host name or IP address
	Port     uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                        // Used only for none ICMP JobType
	Type     HostType `protobuf:"varint,3,opt,name=type,proto3,enum=athena.HostType" json:"type,omitempty"`   // Type of the host
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{0}
}

func (x *Host) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *Host) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Host) GetType() HostType {
	if x != nil {
		return x.Type
	}
	return HostType_ICMP
}

// Job defines a set of targets to test connectivity/integrity by a certain deadline.
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Job Identifier
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Job Specs
	Hosts    []*Host                `protobuf:"bytes,11,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Deadline *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Job) GetHosts() []*Host {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *Job) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

// Node represents a
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeUuid      string   `protobuf:"bytes,1,opt,name=node_uuid,json=nodeUuid,proto3" json:"node_uuid,omitempty"`
	Type          NodeType `protobuf:"varint,2,opt,name=type,proto3,enum=athena.NodeType" json:"type,omitempty"`
	IpAddr        string   `protobuf:"bytes,11,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"` // IP address of the node
	Isp           string   `protobuf:"bytes,12,opt,name=isp,proto3" json:"isp,omitempty"`                     // ISP who provided the ip_addr and its route to the node
	Country       string   `protobuf:"bytes,13,opt,name=country,proto3" json:"country,omitempty"`             // Country of the node
	Stateprovince string   `protobuf:"bytes,14,opt,name=stateprovince,proto3" json:"stateprovince,omitempty"` // State/Province of the node
	City          string   `protobuf:"bytes,15,opt,name=city,proto3" json:"city,omitempty"`                   // City of the node
	// Node Owner
	OwnerUuid string `protobuf:"bytes,21,opt,name=owner_uuid,json=ownerUuid,proto3" json:"owner_uuid,omitempty"` // UUID of the owner
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{2}
}

func (x *Node) GetNodeUuid() string {
	if x != nil {
		return x.NodeUuid
	}
	return ""
}

func (x *Node) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_Probe
}

func (x *Node) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *Node) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *Node) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Node) GetStateprovince() string {
	if x != nil {
		return x.Stateprovince
	}
	return ""
}

func (x *Node) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Node) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Test Response
	Success   bool   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	LatencyMs uint32 `protobuf:"varint,6,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	// JobType Specific Fields
	HttpResponse *string `protobuf:"bytes,10,opt,name=http_response,json=httpResponse,proto3,oneof" json:"http_response,omitempty"`
	DnsAnswer    *string `protobuf:"bytes,20,opt,name=dns_answer,json=dnsAnswer,proto3,oneof" json:"dns_answer,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Result) GetLatencyMs() uint32 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *Result) GetHttpResponse() string {
	if x != nil && x.HttpResponse != nil {
		return *x.HttpResponse
	}
	return ""
}

func (x *Result) GetDnsAnswer() string {
	if x != nil && x.DnsAnswer != nil {
		return *x.DnsAnswer
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Job Identifier
	Uuid   string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Relays []string `protobuf:"bytes,2,rep,name=relays,proto3" json:"relays,omitempty"` // Relays that were used to forward the result. Used to trace the path & prevent loops.
	// Job Specs
	Results    []*Result              `protobuf:"bytes,11,rep,name=results,proto3" json:"results,omitempty"`
	AcceptedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	ReportedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=reported_at,json=reportedAt,proto3" json:"reported_at,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_athena_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_athena_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_athena_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Response) GetRelays() []string {
	if x != nil {
		return x.Relays
	}
	return nil
}

func (x *Response) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *Response) GetAcceptedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

func (x *Response) GetReportedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportedAt
	}
	return nil
}

var File_athena_proto protoreflect.FileDescriptor

var file_athena_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x05,
	0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xe7, 0x01,
	0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x64, 0x6e, 0x73,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x64, 0x6e, 0x73, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0xda, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6c,
	0x61, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x66, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x43, 0x4d, 0x50, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x43, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x0b,
	0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x44,
	0x4e, 0x53, 0x5f, 0x41, 0x10, 0x15, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4e, 0x53, 0x5f, 0x41, 0x41,
	0x41, 0x41, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x4e, 0x53, 0x5f, 0x43, 0x4e, 0x41, 0x4d,
	0x45, 0x10, 0x17, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4e, 0x53, 0x5f, 0x4d, 0x58, 0x10, 0x18, 0x2a,
	0x45, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x10, 0x0a, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x10, 0x14, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_athena_proto_rawDescOnce sync.Once
	file_athena_proto_rawDescData = file_athena_proto_rawDesc
)

func file_athena_proto_rawDescGZIP() []byte {
	file_athena_proto_rawDescOnce.Do(func() {
		file_athena_proto_rawDescData = protoimpl.X.CompressGZIP(file_athena_proto_rawDescData)
	})
	return file_athena_proto_rawDescData
}

var file_athena_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_athena_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_athena_proto_goTypes = []interface{}{
	(HostType)(0),                 // 0: athena.HostType
	(NodeType)(0),                 // 1: athena.NodeType
	(*Host)(nil),                  // 2: athena.Host
	(*Job)(nil),                   // 3: athena.Job
	(*Node)(nil),                  // 4: athena.Node
	(*Result)(nil),                // 5: athena.Result
	(*Response)(nil),              // 6: athena.Response
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_athena_proto_depIdxs = []int32{
	0, // 0: athena.Host.type:type_name -> athena.HostType
	2, // 1: athena.Job.hosts:type_name -> athena.Host
	7, // 2: athena.Job.deadline:type_name -> google.protobuf.Timestamp
	1, // 3: athena.Node.type:type_name -> athena.NodeType
	5, // 4: athena.Response.results:type_name -> athena.Result
	7, // 5: athena.Response.accepted_at:type_name -> google.protobuf.Timestamp
	7, // 6: athena.Response.reported_at:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_athena_proto_init() }
func file_athena_proto_init() {
	if File_athena_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_athena_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_athena_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_athena_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_athena_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_athena_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_athena_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_athena_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_athena_proto_goTypes,
		DependencyIndexes: file_athena_proto_depIdxs,
		EnumInfos:         file_athena_proto_enumTypes,
		MessageInfos:      file_athena_proto_msgTypes,
	}.Build()
	File_athena_proto = out.File
	file_athena_proto_rawDesc = nil
	file_athena_proto_goTypes = nil
	file_athena_proto_depIdxs = nil
}
